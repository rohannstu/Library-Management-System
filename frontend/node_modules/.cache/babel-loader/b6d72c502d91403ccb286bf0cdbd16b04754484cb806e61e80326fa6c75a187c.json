{"ast":null,"code":"var _jsxFileName = \"/home/rohan-sinha/Documents/Library Managemet System /frontend/src/pages/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { useNavigate, Link as RouterLink } from 'react-router-dom';\nimport { Container, Box, Typography, TextField, Button, Link, Paper, Alert, CircularProgress } from '@mui/material';\nimport { AuthContext } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [formErrors, setFormErrors] = useState({});\n  const [showMockLoginOptions, setShowMockLoginOptions] = useState(false);\n  const {\n    login,\n    loading,\n    error\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n\n    // Clear error when user types\n    if (formErrors[name]) {\n      setFormErrors({\n        ...formErrors,\n        [name]: ''\n      });\n    }\n  };\n  const validateForm = () => {\n    const errors = {};\n    if (!formData.email) {\n      errors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      errors.email = 'Email is invalid';\n    }\n    if (!formData.password) {\n      errors.password = 'Password is required';\n    }\n    setFormErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (validateForm()) {\n      const success = await login(formData.email, formData.password);\n      if (success) {\n        navigate('/');\n      }\n    }\n  };\n  const handleMockLogin = async role => {\n    // Create a mock JWT token with the specified role\n    const header = btoa(JSON.stringify({\n      alg: 'HS256',\n      typ: 'JWT'\n    }));\n    const payload = btoa(JSON.stringify({\n      sub: '1',\n      email: role === 'ADMIN' ? 'admin@example.com' : 'user@example.com',\n      name: role === 'ADMIN' ? 'Admin User' : 'Regular User',\n      role: role,\n      exp: Math.floor(Date.now() / 1000) + 60 * 60 // 1 hour from now\n    }));\n    const signature = btoa('mock_signature');\n    const token = `${header}.${payload}.${signature}`;\n    localStorage.setItem('token', token);\n    window.location.href = '/'; // Force a full page reload to update the auth state\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 4,\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h4\",\n          align: \"center\",\n          gutterBottom: true,\n          children: \"Library Management System\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h2\",\n          variant: \"h5\",\n          align: \"center\",\n          gutterBottom: true,\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 2\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          onSubmit: handleSubmit,\n          noValidate: true,\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"email\",\n            label: \"Email Address\",\n            name: \"email\",\n            autoComplete: \"email\",\n            autoFocus: true,\n            value: formData.email,\n            onChange: handleChange,\n            error: !!formErrors.email,\n            helperText: formErrors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            name: \"password\",\n            label: \"Password\",\n            type: \"password\",\n            id: \"password\",\n            autoComplete: \"current-password\",\n            value: formData.password,\n            onChange: handleChange,\n            error: !!formErrors.password,\n            helperText: formErrors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            sx: {\n              mt: 3,\n              mb: 2\n            },\n            disabled: loading,\n            children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 26\n            }, this) : 'Sign In'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2,\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              component: RouterLink,\n              to: \"/register\",\n              variant: \"body2\",\n              children: \"Don't have an account? Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 3,\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"text\",\n              color: \"secondary\",\n              onClick: () => setShowMockLoginOptions(!showMockLoginOptions),\n              children: showMockLoginOptions ? 'Hide Mock Login Options' : 'Show Mock Login Options'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), showMockLoginOptions && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2,\n              display: 'flex',\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"primary\",\n              onClick: () => handleMockLogin('USER'),\n              sx: {\n                width: '48%'\n              },\n              children: \"Login as User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"secondary\",\n              onClick: () => handleMockLogin('ADMIN'),\n              sx: {\n                width: '48%'\n              },\n              children: \"Login as Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"4dAB3r8n3Ql7lNRLSlE+At+ifyc=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","Link","RouterLink","Container","Box","Typography","TextField","Button","Paper","Alert","CircularProgress","AuthContext","jsxDEV","_jsxDEV","Login","_s","formData","setFormData","email","password","formErrors","setFormErrors","showMockLoginOptions","setShowMockLoginOptions","login","loading","error","navigate","handleChange","e","name","value","target","validateForm","errors","test","Object","keys","length","handleSubmit","preventDefault","success","handleMockLogin","role","header","btoa","JSON","stringify","alg","typ","payload","sub","exp","Math","floor","Date","now","signature","token","localStorage","setItem","window","location","href","maxWidth","children","sx","mt","display","flexDirection","alignItems","p","width","component","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","severity","mb","onSubmit","noValidate","margin","required","fullWidth","id","label","autoComplete","autoFocus","onChange","helperText","type","disabled","size","textAlign","to","color","onClick","justifyContent","_c","$RefreshReg$"],"sources":["/home/rohan-sinha/Documents/Library Managemet System /frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { useNavigate, Link as RouterLink } from 'react-router-dom';\nimport {\n  Container,\n  Box,\n  Typography,\n  TextField,\n  Button,\n  Link,\n  Paper,\n  Alert,\n  CircularProgress\n} from '@mui/material';\nimport { AuthContext } from '../context/AuthContext';\n\nconst Login = () => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [formErrors, setFormErrors] = useState({});\n  const [showMockLoginOptions, setShowMockLoginOptions] = useState(false);\n  const { login, loading, error } = useContext(AuthContext);\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n    \n    // Clear error when user types\n    if (formErrors[name]) {\n      setFormErrors({\n        ...formErrors,\n        [name]: ''\n      });\n    }\n  };\n\n  const validateForm = () => {\n    const errors = {};\n    \n    if (!formData.email) {\n      errors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      errors.email = 'Email is invalid';\n    }\n    \n    if (!formData.password) {\n      errors.password = 'Password is required';\n    }\n    \n    setFormErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (validateForm()) {\n      const success = await login(formData.email, formData.password);\n      if (success) {\n        navigate('/');\n      }\n    }\n  };\n\n  const handleMockLogin = async (role) => {\n    // Create a mock JWT token with the specified role\n    const header = btoa(JSON.stringify({ alg: 'HS256', typ: 'JWT' }));\n    const payload = btoa(JSON.stringify({\n      sub: '1',\n      email: role === 'ADMIN' ? 'admin@example.com' : 'user@example.com',\n      name: role === 'ADMIN' ? 'Admin User' : 'Regular User',\n      role: role,\n      exp: Math.floor(Date.now() / 1000) + (60 * 60) // 1 hour from now\n    }));\n    const signature = btoa('mock_signature');\n    const token = `${header}.${payload}.${signature}`;\n    \n    localStorage.setItem('token', token);\n    window.location.href = '/'; // Force a full page reload to update the auth state\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box sx={{ mt: 8, display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        <Paper sx={{ p: 4, width: '100%' }}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\" gutterBottom>\n            Library Management System\n          </Typography>\n          <Typography component=\"h2\" variant=\"h5\" align=\"center\" gutterBottom>\n            Sign In\n          </Typography>\n          \n          {error && (\n            <Alert severity=\"error\" sx={{ mb: 2 }}>\n              {error}\n            </Alert>\n          )}\n          \n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              value={formData.email}\n              onChange={handleChange}\n              error={!!formErrors.email}\n              helperText={formErrors.email}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={formData.password}\n              onChange={handleChange}\n              error={!!formErrors.password}\n              helperText={formErrors.password}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n              disabled={loading}\n            >\n              {loading ? <CircularProgress size={24} /> : 'Sign In'}\n            </Button>\n            \n            <Box sx={{ mt: 2, textAlign: 'center' }}>\n              <Link component={RouterLink} to=\"/register\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Box>\n            \n            <Box sx={{ mt: 3, textAlign: 'center' }}>\n              <Button \n                variant=\"text\" \n                color=\"secondary\"\n                onClick={() => setShowMockLoginOptions(!showMockLoginOptions)}\n              >\n                {showMockLoginOptions ? 'Hide Mock Login Options' : 'Show Mock Login Options'}\n              </Button>\n            </Box>\n            \n            {showMockLoginOptions && (\n              <Box sx={{ mt: 2, display: 'flex', justifyContent: 'space-between' }}>\n                <Button \n                  variant=\"outlined\" \n                  color=\"primary\"\n                  onClick={() => handleMockLogin('USER')}\n                  sx={{ width: '48%' }}\n                >\n                  Login as User\n                </Button>\n                <Button \n                  variant=\"outlined\" \n                  color=\"secondary\"\n                  onClick={() => handleMockLogin('ADMIN')}\n                  sx={{ width: '48%' }}\n                >\n                  Login as Admin\n                </Button>\n              </Box>\n            )}\n          </Box>\n        </Paper>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Login; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}