{"ast":null,"code":"var _jsxFileName = \"/home/rohan-sinha/Documents/Library Managemet System /frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport api, { authAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Check if user is already logged in\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Set the default Authorization header for all requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Get user info if token exists\n      fetchCurrentUser();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const fetchCurrentUser = async () => {\n    try {\n      // Get user info from the backend\n      const response = await authAPI.getCurrentUser();\n      console.log('Current user data from API:', response.data);\n      setCurrentUser(response.data);\n    } catch (err) {\n      console.error('Error fetching current user:', err);\n      setError('Failed to fetch user information');\n      // Clear token if it's invalid\n      localStorage.removeItem('token');\n      delete axios.defaults.headers.common['Authorization'];\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await authAPI.login({\n        email,\n        password\n      });\n      const {\n        accessToken\n      } = response.data;\n\n      // Save token to localStorage\n      localStorage.setItem('token', accessToken);\n\n      // Set the default Authorization header for all requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n\n      // Fetch current user info\n      await fetchCurrentUser();\n      return true;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Login error:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Failed to login');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async userData => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await authAPI.register(userData);\n\n      // After successful registration, redirect to login page\n      // The user will need to log in with their credentials\n      return true;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error('Registration error:', err);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || 'Failed to register');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    // Remove token from localStorage\n    localStorage.removeItem('token');\n\n    // Remove Authorization header\n    delete axios.defaults.headers.common['Authorization'];\n\n    // Clear user state\n    setCurrentUser(null);\n  };\n  const isAdmin = () => {\n    console.log('isAdmin check - currentUser:', currentUser);\n    const result = currentUser && currentUser.role === 'ADMIN';\n    console.log('isAdmin result:', result);\n    return result;\n  };\n  const value = {\n    currentUser,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    isAdmin\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"JNizP9FwoqjqDhcaQoKbEEqEJbk=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","api","authAPI","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","error","setError","token","localStorage","getItem","defaults","headers","common","fetchCurrentUser","response","getCurrentUser","console","log","data","err","removeItem","login","email","password","accessToken","setItem","_err$response","_err$response$data","register","userData","_err$response2","_err$response2$data","logout","isAdmin","result","role","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/rohan-sinha/Documents/Library Managemet System /frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport api, { authAPI } from '../services/api';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Check if user is already logged in\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Set the default Authorization header for all requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      \n      // Get user info if token exists\n      fetchCurrentUser();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const fetchCurrentUser = async () => {\n    try {\n      // Get user info from the backend\n      const response = await authAPI.getCurrentUser();\n      console.log('Current user data from API:', response.data);\n      setCurrentUser(response.data);\n    } catch (err) {\n      console.error('Error fetching current user:', err);\n      setError('Failed to fetch user information');\n      // Clear token if it's invalid\n      localStorage.removeItem('token');\n      delete axios.defaults.headers.common['Authorization'];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await authAPI.login({ email, password });\n      const { accessToken } = response.data;\n      \n      // Save token to localStorage\n      localStorage.setItem('token', accessToken);\n      \n      // Set the default Authorization header for all requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n      \n      // Fetch current user info\n      await fetchCurrentUser();\n      \n      return true;\n    } catch (err) {\n      console.error('Login error:', err);\n      setError(err.response?.data?.error || 'Failed to login');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await authAPI.register(userData);\n      \n      // After successful registration, redirect to login page\n      // The user will need to log in with their credentials\n      return true;\n    } catch (err) {\n      console.error('Registration error:', err);\n      setError(err.response?.data?.error || 'Failed to register');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const logout = () => {\n    // Remove token from localStorage\n    localStorage.removeItem('token');\n    \n    // Remove Authorization header\n    delete axios.defaults.headers.common['Authorization'];\n    \n    // Clear user state\n    setCurrentUser(null);\n  };\n\n  const isAdmin = () => {\n    console.log('isAdmin check - currentUser:', currentUser);\n    const result = currentUser && currentUser.role === 'ADMIN';\n    console.log('isAdmin result:', result);\n    return result;\n  };\n\n  const value = {\n    currentUser,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    isAdmin\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}