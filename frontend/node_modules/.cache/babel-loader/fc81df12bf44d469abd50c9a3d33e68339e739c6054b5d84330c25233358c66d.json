{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to add the auth token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  console.log('API Request:', config.method.toUpperCase(), config.url, config.data);\n  return config;\n}, error => {\n  console.error('API Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Add a response interceptor to handle errors\napi.interceptors.response.use(response => {\n  console.log('API Response:', response.status, response.data);\n  return response;\n}, error => {\n  var _error$response, _error$response2;\n  console.error('API Response Error:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status, ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n\n  // Handle 401 Unauthorized errors\n  if (error.response && error.response.status === 401) {\n    // Clear token and redirect to login\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  register: userData => api.post('/auth/signup', userData),\n  getCurrentUser: () => api.get('/auth/me')\n};\n\n// Books API\nexport const booksAPI = {\n  getAll: () => api.get('/books'),\n  getById: id => api.get(`/books/${id}`),\n  create: bookData => api.post('/books', bookData),\n  update: (id, bookData) => api.put(`/books/${id}`, bookData),\n  delete: id => api.delete(`/books/${id}`)\n};\n\n// Members API\nexport const membersAPI = {\n  getAll: () => api.get('/members'),\n  getById: id => api.get(`/members/${id}`),\n  create: memberData => api.post('/members', memberData),\n  update: (id, memberData) => api.put(`/members/${id}`, memberData),\n  delete: id => api.delete(`/members/${id}`)\n};\n\n// Borrowings API\nexport const borrowingsAPI = {\n  getAll: () => api.get('/borrowings'),\n  getById: id => api.get(`/borrowings/${id}`),\n  create: borrowingData => api.post('/borrowings', borrowingData),\n  update: (id, borrowingData) => api.put(`/borrowings/${id}`, borrowingData),\n  returnBook: (id, returnData) => api.put(`/borrowings/${id}/return`, returnData),\n  delete: id => api.delete(`/borrowings/${id}`),\n  getByMember: memberId => api.get(`/borrowings/member/${memberId}`),\n  getByBook: bookId => api.get(`/borrowings/book/${bookId}`),\n  getActive: () => api.get('/borrowings/active'),\n  getOverdue: () => api.get('/borrowings/overdue')\n};\n\n// Helper function to load mock data from localStorage\nconst loadMockData = key => {\n  try {\n    const data = localStorage.getItem(key);\n    return data ? JSON.parse(data) : null;\n  } catch (error) {\n    console.error(`Error loading mock ${key}:`, error);\n    return null;\n  }\n};\n\n// Helper function to handle API fallback to mock data\nconst withMockFallback = async (apiCall, mockDataKey) => {\n  try {\n    const response = await apiCall();\n    return response;\n  } catch (error) {\n    console.warn(`API call failed, using mock data for ${mockDataKey}:`, error);\n    const mockData = loadMockData(mockDataKey);\n    if (!mockData) {\n      throw new Error(`No mock data available for ${mockDataKey}`);\n    }\n    return {\n      data: mockData\n    };\n  }\n};\n\n// Stats API\nexport const statsAPI = {\n  getDashboardStats: async () => {\n    try {\n      const response = await api.get('/stats/dashboard');\n      return response;\n    } catch (error) {\n      console.warn('Stats API call failed, generating mock stats:', error);\n\n      // Generate mock stats based on books, members, and borrowings data\n      const books = loadMockData('books') || [];\n      const members = loadMockData('members') || [];\n      const borrowings = loadMockData('borrowings') || [];\n      const today = new Date();\n      const activeBorrowings = borrowings.filter(b => !b.returned);\n      const overdueBorrowings = activeBorrowings.filter(b => new Date(b.dueDate) < today);\n      const mockStats = {\n        totalBooks: books.length,\n        totalMembers: members.length,\n        totalBorrowings: borrowings.length,\n        activeBorrowings: activeBorrowings.length,\n        overdueBorrowings: overdueBorrowings.length\n      };\n      return {\n        data: mockStats\n      };\n    }\n  },\n  getBookStats: () => withMockFallback(() => api.get('/stats/books'), 'books'),\n  getMemberStats: () => withMockFallback(() => api.get('/stats/members'), 'members'),\n  getBorrowingStats: () => withMockFallback(() => api.get('/stats/borrowings'), 'borrowings')\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","console","log","method","toUpperCase","url","data","error","Promise","reject","response","status","_error$response","_error$response2","message","removeItem","window","location","href","authAPI","login","credentials","post","register","userData","getCurrentUser","get","booksAPI","getAll","getById","id","bookData","update","put","delete","membersAPI","memberData","borrowingsAPI","borrowingData","returnBook","returnData","getByMember","memberId","getByBook","bookId","getActive","getOverdue","loadMockData","key","JSON","parse","withMockFallback","apiCall","mockDataKey","warn","mockData","Error","statsAPI","getDashboardStats","books","members","borrowings","today","Date","activeBorrowings","filter","b","returned","overdueBorrowings","dueDate","mockStats","totalBooks","length","totalMembers","totalBorrowings","getBookStats","getMemberStats","getBorrowingStats"],"sources":["/home/rohan-sinha/Documents/Library Managemet System /frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add a request interceptor to add the auth token to requests\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    console.log('API Request:', config.method.toUpperCase(), config.url, config.data);\n    return config;\n  },\n  (error) => {\n    console.error('API Request Error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Add a response interceptor to handle errors\napi.interceptors.response.use(\n  (response) => {\n    console.log('API Response:', response.status, response.data);\n    return response;\n  },\n  (error) => {\n    console.error('API Response Error:', error.response?.status, error.response?.data || error.message);\n    \n    // Handle 401 Unauthorized errors\n    if (error.response && error.response.status === 401) {\n      // Clear token and redirect to login\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authAPI = {\n  login: (credentials) => api.post('/auth/login', credentials),\n  register: (userData) => api.post('/auth/signup', userData),\n  getCurrentUser: () => api.get('/auth/me'),\n};\n\n// Books API\nexport const booksAPI = {\n  getAll: () => api.get('/books'),\n  getById: (id) => api.get(`/books/${id}`),\n  create: (bookData) => api.post('/books', bookData),\n  update: (id, bookData) => api.put(`/books/${id}`, bookData),\n  delete: (id) => api.delete(`/books/${id}`),\n};\n\n// Members API\nexport const membersAPI = {\n  getAll: () => api.get('/members'),\n  getById: (id) => api.get(`/members/${id}`),\n  create: (memberData) => api.post('/members', memberData),\n  update: (id, memberData) => api.put(`/members/${id}`, memberData),\n  delete: (id) => api.delete(`/members/${id}`),\n};\n\n// Borrowings API\nexport const borrowingsAPI = {\n  getAll: () => api.get('/borrowings'),\n  getById: (id) => api.get(`/borrowings/${id}`),\n  create: (borrowingData) => api.post('/borrowings', borrowingData),\n  update: (id, borrowingData) => api.put(`/borrowings/${id}`, borrowingData),\n  returnBook: (id, returnData) => api.put(`/borrowings/${id}/return`, returnData),\n  delete: (id) => api.delete(`/borrowings/${id}`),\n  getByMember: (memberId) => api.get(`/borrowings/member/${memberId}`),\n  getByBook: (bookId) => api.get(`/borrowings/book/${bookId}`),\n  getActive: () => api.get('/borrowings/active'),\n  getOverdue: () => api.get('/borrowings/overdue'),\n};\n\n// Helper function to load mock data from localStorage\nconst loadMockData = (key) => {\n  try {\n    const data = localStorage.getItem(key);\n    return data ? JSON.parse(data) : null;\n  } catch (error) {\n    console.error(`Error loading mock ${key}:`, error);\n    return null;\n  }\n};\n\n// Helper function to handle API fallback to mock data\nconst withMockFallback = async (apiCall, mockDataKey) => {\n  try {\n    const response = await apiCall();\n    return response;\n  } catch (error) {\n    console.warn(`API call failed, using mock data for ${mockDataKey}:`, error);\n    const mockData = loadMockData(mockDataKey);\n    \n    if (!mockData) {\n      throw new Error(`No mock data available for ${mockDataKey}`);\n    }\n    \n    return { data: mockData };\n  }\n};\n\n// Stats API\nexport const statsAPI = {\n  getDashboardStats: async () => {\n    try {\n      const response = await api.get('/stats/dashboard');\n      return response;\n    } catch (error) {\n      console.warn('Stats API call failed, generating mock stats:', error);\n      \n      // Generate mock stats based on books, members, and borrowings data\n      const books = loadMockData('books') || [];\n      const members = loadMockData('members') || [];\n      const borrowings = loadMockData('borrowings') || [];\n      \n      const today = new Date();\n      const activeBorrowings = borrowings.filter(b => !b.returned);\n      const overdueBorrowings = activeBorrowings.filter(b => new Date(b.dueDate) < today);\n      \n      const mockStats = {\n        totalBooks: books.length,\n        totalMembers: members.length,\n        totalBorrowings: borrowings.length,\n        activeBorrowings: activeBorrowings.length,\n        overdueBorrowings: overdueBorrowings.length\n      };\n      \n      return { data: mockStats };\n    }\n  },\n  getBookStats: () => withMockFallback(() => api.get('/stats/books'), 'books'),\n  getMemberStats: () => withMockFallback(() => api.get('/stats/members'), 'members'),\n  getBorrowingStats: () => withMockFallback(() => api.get('/stats/borrowings'), 'borrowings'),\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}