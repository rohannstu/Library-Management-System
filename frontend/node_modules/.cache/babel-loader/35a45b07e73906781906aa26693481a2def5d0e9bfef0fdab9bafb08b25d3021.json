{"ast":null,"code":"var _jsxFileName = \"/home/rohan-sinha/Documents/Library Managemet System /frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Check if user is already logged in\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Set the default Authorization header for all requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Get user info if token exists\n      fetchCurrentUser();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const fetchCurrentUser = async () => {\n    try {\n      // This endpoint would need to be implemented in your backend\n      // const response = await axios.get('/api/auth/me');\n      // setCurrentUser(response.data);\n\n      // For now, we'll just use the token to determine if user is logged in\n      const token = localStorage.getItem('token');\n      if (token) {\n        console.log('Token found:', token);\n\n        // Parse the JWT token to get user info (this is just for demo purposes)\n        // In a real app, you should validate the token on the server\n        const base64Url = token.split('.')[1];\n        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n        const jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n          return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n        const payload = JSON.parse(jsonPayload);\n        console.log('Token payload:', payload);\n        const user = {\n          id: payload.sub,\n          role: payload.role || 'USER',\n          // Default to USER if role is not in the token\n          email: payload.email,\n          name: payload.name\n        };\n        console.log('Setting current user:', user);\n        setCurrentUser(user);\n      }\n    } catch (err) {\n      console.error('Error fetching current user:', err);\n      setError('Failed to fetch user information');\n      // Clear token if it's invalid\n      localStorage.removeItem('token');\n      delete axios.defaults.headers.common['Authorization'];\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n      const {\n        accessToken\n      } = response.data;\n\n      // Save token to localStorage\n      localStorage.setItem('token', accessToken);\n\n      // Set the default Authorization header for all requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n\n      // Fetch current user info\n      await fetchCurrentUser();\n      return true;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Login error:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Failed to login');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async userData => {\n    try {\n      setLoading(true);\n      setError(null);\n      await axios.post('/api/auth/signup', userData);\n      return true;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error('Registration error:', err);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || 'Failed to register');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    // Remove token from localStorage\n    localStorage.removeItem('token');\n\n    // Remove Authorization header\n    delete axios.defaults.headers.common['Authorization'];\n\n    // Clear user state\n    setCurrentUser(null);\n  };\n  const isAdmin = () => {\n    console.log('isAdmin check - currentUser:', currentUser);\n    const result = currentUser && currentUser.role === 'ADMIN';\n    console.log('isAdmin result:', result);\n    return result;\n  };\n  const value = {\n    currentUser,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    isAdmin\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"JNizP9FwoqjqDhcaQoKbEEqEJbk=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","error","setError","token","localStorage","getItem","defaults","headers","common","fetchCurrentUser","console","log","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","payload","JSON","parse","user","id","sub","role","email","name","err","removeItem","login","password","response","post","accessToken","data","setItem","_err$response","_err$response$data","register","userData","_err$response2","_err$response2$data","logout","isAdmin","result","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/rohan-sinha/Documents/Library Managemet System /frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Check if user is already logged in\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Set the default Authorization header for all requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      \n      // Get user info if token exists\n      fetchCurrentUser();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const fetchCurrentUser = async () => {\n    try {\n      // This endpoint would need to be implemented in your backend\n      // const response = await axios.get('/api/auth/me');\n      // setCurrentUser(response.data);\n      \n      // For now, we'll just use the token to determine if user is logged in\n      const token = localStorage.getItem('token');\n      if (token) {\n        console.log('Token found:', token);\n        \n        // Parse the JWT token to get user info (this is just for demo purposes)\n        // In a real app, you should validate the token on the server\n        const base64Url = token.split('.')[1];\n        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n        const jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\n          return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n        \n        const payload = JSON.parse(jsonPayload);\n        console.log('Token payload:', payload);\n        \n        const user = {\n          id: payload.sub,\n          role: payload.role || 'USER', // Default to USER if role is not in the token\n          email: payload.email,\n          name: payload.name\n        };\n        \n        console.log('Setting current user:', user);\n        setCurrentUser(user);\n      }\n    } catch (err) {\n      console.error('Error fetching current user:', err);\n      setError('Failed to fetch user information');\n      // Clear token if it's invalid\n      localStorage.removeItem('token');\n      delete axios.defaults.headers.common['Authorization'];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await axios.post('/api/auth/login', { email, password });\n      const { accessToken } = response.data;\n      \n      // Save token to localStorage\n      localStorage.setItem('token', accessToken);\n      \n      // Set the default Authorization header for all requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n      \n      // Fetch current user info\n      await fetchCurrentUser();\n      \n      return true;\n    } catch (err) {\n      console.error('Login error:', err);\n      setError(err.response?.data?.error || 'Failed to login');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      await axios.post('/api/auth/signup', userData);\n      \n      return true;\n    } catch (err) {\n      console.error('Registration error:', err);\n      setError(err.response?.data?.error || 'Failed to register');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const logout = () => {\n    // Remove token from localStorage\n    localStorage.removeItem('token');\n    \n    // Remove Authorization header\n    delete axios.defaults.headers.common['Authorization'];\n    \n    // Clear user state\n    setCurrentUser(null);\n  };\n\n  const isAdmin = () => {\n    console.log('isAdmin check - currentUser:', currentUser);\n    const result = currentUser && currentUser.role === 'ADMIN';\n    console.log('isAdmin result:', result);\n    return result;\n  };\n\n  const value = {\n    currentUser,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    isAdmin\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACT;MACAb,KAAK,CAACgB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUL,KAAK,EAAE;;MAElE;MACAM,gBAAgB,CAAC,CAAC;IACpB,CAAC,MAAM;MACLT,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF;MACA;MACA;;MAEA;MACA,MAAMN,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAIF,KAAK,EAAE;QACTO,OAAO,CAACC,GAAG,CAAC,cAAc,EAAER,KAAK,CAAC;;QAElC;QACA;QACA,MAAMS,SAAS,GAAGT,KAAK,CAACU,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACrC,MAAMC,MAAM,GAAGF,SAAS,CAACG,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;QAC9D,MAAMC,WAAW,GAAGC,kBAAkB,CAACC,IAAI,CAACJ,MAAM,CAAC,CAACD,KAAK,CAAC,EAAE,CAAC,CAACM,GAAG,CAAC,UAASC,CAAC,EAAE;UAC5E,OAAO,GAAG,GAAG,CAAC,IAAI,GAAGA,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC9D,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;QAEZ,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACX,WAAW,CAAC;QACvCN,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEc,OAAO,CAAC;QAEtC,MAAMG,IAAI,GAAG;UACXC,EAAE,EAAEJ,OAAO,CAACK,GAAG;UACfC,IAAI,EAAEN,OAAO,CAACM,IAAI,IAAI,MAAM;UAAE;UAC9BC,KAAK,EAAEP,OAAO,CAACO,KAAK;UACpBC,IAAI,EAAER,OAAO,CAACQ;QAChB,CAAC;QAEDvB,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEiB,IAAI,CAAC;QAC1C9B,cAAc,CAAC8B,IAAI,CAAC;MACtB;IACF,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZxB,OAAO,CAACT,KAAK,CAAC,8BAA8B,EAAEiC,GAAG,CAAC;MAClDhC,QAAQ,CAAC,kCAAkC,CAAC;MAC5C;MACAE,YAAY,CAAC+B,UAAU,CAAC,OAAO,CAAC;MAChC,OAAO7C,KAAK,CAACgB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;IACvD,CAAC,SAAS;MACRR,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMoC,KAAK,GAAG,MAAAA,CAAOJ,KAAK,EAAEK,QAAQ,KAAK;IACvC,IAAI;MACFrC,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MAEd,MAAMoC,QAAQ,GAAG,MAAMhD,KAAK,CAACiD,IAAI,CAAC,iBAAiB,EAAE;QAAEP,KAAK;QAAEK;MAAS,CAAC,CAAC;MACzE,MAAM;QAAEG;MAAY,CAAC,GAAGF,QAAQ,CAACG,IAAI;;MAErC;MACArC,YAAY,CAACsC,OAAO,CAAC,OAAO,EAAEF,WAAW,CAAC;;MAE1C;MACAlD,KAAK,CAACgB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUgC,WAAW,EAAE;;MAExE;MACA,MAAM/B,gBAAgB,CAAC,CAAC;MAExB,OAAO,IAAI;IACb,CAAC,CAAC,OAAOyB,GAAG,EAAE;MAAA,IAAAS,aAAA,EAAAC,kBAAA;MACZlC,OAAO,CAACT,KAAK,CAAC,cAAc,EAAEiC,GAAG,CAAC;MAClChC,QAAQ,CAAC,EAAAyC,aAAA,GAAAT,GAAG,CAACI,QAAQ,cAAAK,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcF,IAAI,cAAAG,kBAAA,uBAAlBA,kBAAA,CAAoB3C,KAAK,KAAI,iBAAiB,CAAC;MACxD,OAAO,KAAK;IACd,CAAC,SAAS;MACRD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAM6C,QAAQ,GAAG,MAAOC,QAAQ,IAAK;IACnC,IAAI;MACF9C,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MAEd,MAAMZ,KAAK,CAACiD,IAAI,CAAC,kBAAkB,EAAEO,QAAQ,CAAC;MAE9C,OAAO,IAAI;IACb,CAAC,CAAC,OAAOZ,GAAG,EAAE;MAAA,IAAAa,cAAA,EAAAC,mBAAA;MACZtC,OAAO,CAACT,KAAK,CAAC,qBAAqB,EAAEiC,GAAG,CAAC;MACzChC,QAAQ,CAAC,EAAA6C,cAAA,GAAAb,GAAG,CAACI,QAAQ,cAAAS,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcN,IAAI,cAAAO,mBAAA,uBAAlBA,mBAAA,CAAoB/C,KAAK,KAAI,oBAAoB,CAAC;MAC3D,OAAO,KAAK;IACd,CAAC,SAAS;MACRD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMiD,MAAM,GAAGA,CAAA,KAAM;IACnB;IACA7C,YAAY,CAAC+B,UAAU,CAAC,OAAO,CAAC;;IAEhC;IACA,OAAO7C,KAAK,CAACgB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;;IAErD;IACAV,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMoD,OAAO,GAAGA,CAAA,KAAM;IACpBxC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEd,WAAW,CAAC;IACxD,MAAMsD,MAAM,GAAGtD,WAAW,IAAIA,WAAW,CAACkC,IAAI,KAAK,OAAO;IAC1DrB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEwC,MAAM,CAAC;IACtC,OAAOA,MAAM;EACf,CAAC;EAED,MAAMC,KAAK,GAAG;IACZvD,WAAW;IACXE,OAAO;IACPE,KAAK;IACLmC,KAAK;IACLS,QAAQ;IACRI,MAAM;IACNC;EACF,CAAC;EAED,oBAAO1D,OAAA,CAACC,WAAW,CAAC4D,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAzD,QAAA,EAAEA;EAAQ;IAAA2D,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;AAAC7D,EAAA,CAvIWF,YAAY;AAAAgE,EAAA,GAAZhE,YAAY;AAAA,IAAAgE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}